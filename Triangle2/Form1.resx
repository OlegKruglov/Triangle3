<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>